ARG VER=latest
ARG ORG=tacc
FROM ${ORG}/tacc-ubuntu18:${VER}

########################################
# BUILD Args
########################################
ARG FLAGS
ARG VER
ARG REL
########################################
# Configure ENV
########################################
ENV CFLAGS=${FLAGS}
ENV CXXFLAGS=${FLAGS}
RUN RF=/etc/${REL}-release; echo ${VER} > $RF && chmod a+r $RF

########################################
# Install mpi
########################################

# necessities and IB stack
RUN apt-get update && apt-get install -yq gnupg2 ca-certificates
RUN curl -k -L http://www.mellanox.com/downloads/ofed/RPM-GPG-KEY-Mellanox | apt-key add -
RUN echo deb https://linux.mellanox.com/public/repo/mlnx_ofed/latest/ubuntu18.04/x86_64/UPSTREAM_LIBS ./ > /etc/apt/sources.list.d/mlnx_ofed.list
RUN apt-get update && \
    apt-get install -yq --no-install-recommends gfortran bison libibverbs-dev libnuma-dev \
	libibmad-dev libibumad-dev librdmacm-dev libxml2-dev ca-certificates libfabric-dev \
        mlnx-ofed-hpc ucx\
	&& docker-clean

# Install impi-19.0.5
ARG MAJV=19
ARG MINV=0
ARG BV=.5
ARG DIR=intel${MAJV}-${MAJV}.${MINV}${BV}

RUN curl -k -L https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB | apt-key add -
RUN echo deb https://apt.repos.intel.com/mpi all main > /etc/apt/sources.list.d/intel-mpi.list
RUN apt-get update \
    && apt-get install -y intel-mpi-20${MAJV}${BV}-075 \
    && docker-clean

ENV MPIVARS_SCRIPT=/opt/intel/compilers_and_libraries/linux/mpi/intel64/bin/mpivars.sh
ENV I_MPI_LIBRARY_KIND=release_mt
ENV I_MPI_OFI_LIBRARY_INTERNAL=1

# Add hello world
ADD extras/hello.c /tmp/hello.c
RUN . $MPIVARS_SCRIPT \
    && mpicc /tmp/hello.c -o /usr/local/bin/hellow \
    && rm /tmp/hello.c \
    && docker-clean

# Build benchmark programs
ARG DIR=osu-micro-benchmarks-5.6.2
RUN . $MPIVARS_SCRIPT \
    && curl http://mvapich.cse.ohio-state.edu/download/mvapich/${DIR}.tar.gz | tar -xzf - \
    && cd ${DIR} \
    && ./configure --prefix=/opt/ CC=$(which mpicc) CXX=$(which mpicxx) \
    && make -j $(nproc --all 2>/dev/null || echo 2) && make install \
    && mv /opt/libexec/osu-micro-benchmarks/mpi /opt/osu-micro-benchmarks \
    && rm -rf /opt/libexec && find /opt \
    && cd ../ && rm -rf ${DIR} && docker-clean

# Test installation
RUN . $MPIVARS_SCRIPT \
    mpirun -n 2 hellow

RUN echo '#!/bin/bash' > /docker-entrypoint.sh
RUN echo 'source $MPIVARS_SCRIPT' >> /docker-entrypoint.sh
RUN echo 'exec "$@"' >> /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]
